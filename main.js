(()=>{"use strict";var e=document.querySelector(".profile__card-add"),t=document.querySelector(".popup__form_place"),n={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save",inactiveButtonClass:"popup__save_inactive",inputErrorClass:"popup__input_type-error",errorClass:"popup__input-error_active"};function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){return e._renderer(t)}))}},{key:"addItemPrepend",value:function(e){this._container.prepend(e)}},{key:"addItemAppend",value:function(e){this._container.append(e)}}])&&r(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t,n){var r=this,o=t.data,i=t.handleCardClick,c=t.handleLikeClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),function(e,t,n){t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n}(this,"_handleTrashClick",(function(){r._element.remove(),r._element=null})),this._data=o,this._name=o.name,this._link=o.link,this._handleCardClick=i,this._handleLikeClick=c,this._cardSelector=n}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}},{key:"isLiked",value:function(){return this._likeButton.classList.contains("card__like_active")}},{key:"like",value:function(){this._likeButton.classList.add("card__like_active"),this._likeCounter.textContent="1"}},{key:"dislike",value:function(){this._likeButton.classList.remove("card__like_active"),this._likeCounter.textContent="0"}},{key:"_setEventListeners",value:function(){var e=this;this._cardImage.addEventListener("click",(function(){e._handleCardClick({name:e._name,link:e._link})})),this._likeButton.addEventListener("click",this._handleLikeClick),this._trashButton.addEventListener("click",this._handleTrashClick)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".card__image"),this._likeButton=this._element.querySelector(".card__like"),this._trashButton=this._element.querySelector(".card__trash"),this._likeCounter=this._element.querySelector(".card__like-counter"),this._setEventListeners(),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._element.querySelector(".card__title").textContent=this._name,this._element}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var l=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),function(e,t,n){t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n}(this,"_handleEscClose",(function(e){"Escape"===e.key&&n.close()})),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){(t.target.classList.contains("popup")||t.target.classList.contains("popup__close"))&&e.close()}))}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function p(){return p="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=f(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},p.apply(this,arguments)}function f(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=h(e)););return e}function y(e,t){return y=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},y(e,t)}function d(e,t){if(t&&("object"===a(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function h(e){return h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},h(e)}var _=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&y(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=h(r);if(o){var n=h(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return d(this,e)});function c(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(t=i.call(this,e))._zoomImage=t._popup.querySelector(".popup__card"),t._zoomTitle=t._popup.querySelector(".popup__subtitle-zoom"),t}return t=c,(n=[{key:"open",value:function(e){this._zoomImage.src=e.link,this._zoomImage.alt=e.name,this._zoomTitle.textContent=e.name,p(h(c.prototype),"open",this).call(this)}}])&&s(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(l);function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(e,t){return v=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},v(e,t)}function k(e,t){if(t&&("object"===m(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return g(e)}function g(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function w(){return w="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=E(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},w.apply(this,arguments)}function E(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=S(e)););return e}function S(e){return S=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},S(e)}var O=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&v(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=S(r);if(o){var n=S(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return k(this,e)});function c(e,t){var n,r,o=e.popupSelector,u=e.callbackFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),function(e,t,n){t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n}(g(r=i.call(this,o)),"close",(function(){w((n=g(r),S(c.prototype)),"close",n).call(n),r._form.reset()})),r._callbackFormSubmit=u,r._obj=t,r._form=r._popup.querySelector(r._obj.formSelector),r._inputList=r._form.querySelectorAll(r._obj.inputSelector),r.submitBtn=r._form.querySelector(r._obj.submitButtonSelector),r}return t=c,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;w(S(c.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),console.log("На меня нажали!"),e._callbackFormSubmit(e._getInputValues())}))}}])&&b(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(l);function j(e){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},j(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function L(){return L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=P(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},L.apply(this,arguments)}function P(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=R(e)););return e}function B(e,t){return B=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},B(e,t)}function I(e,t){if(t&&("object"===j(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function R(e){return R=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},R(e)}var q=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&B(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=R(r);if(o){var n=R(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return I(this,e)});function c(e,t){var n,r=e.handleConfirmAction;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,t))._form=n._popup.querySelector(".popup__form"),n.actionButton=n._popup.querySelector(".popup__save_delete-card"),n._handleConfirmAction=r,n._cardInfo={},n}return t=c,(n=[{key:"open",value:function(e){L(R(c.prototype),"open",this).call(this),console.log(e),this._cardInfo=e}},{key:"setEventListeners",value:function(){var e=this;L(R(c.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleConfirmAction(e._cardInfo)}))}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(l);function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function A(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var x=function(){function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),A(this,"_showInputError",(function(e,t){r._inputError=r._formElement.querySelector(".".concat(e.id,"-error")),e.classList.add(r._listSelector.inputErrorClass),r._inputError.textContent=t,r._inputError.classList.add(r._listSelector.errorClass)})),A(this,"_hideInputError",(function(e){var t=r._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(r._listSelector.inputErrorClass),t.classList.remove(r._listSelector.errorClass),t.textContent=""})),A(this,"_checkInputValidity",(function(e){e.validity.valid?r._hideInputError(e):r._showInputError(e,e.validationMessage)})),A(this,"_hasInvalidInput",(function(e){return r._inputList.some((function(e){return!e.validity.valid}))})),A(this,"toggleButtonState",(function(e){r._hasInvalidInput(e)?r.setDisabledButton():r.setActiveButton()})),A(this,"_setEventListeners",(function(){r.toggleButtonState(),r._inputList.forEach((function(e){e.addEventListener("input",(function(){r._checkInputValidity(e),r.toggleButtonState()}))}))})),A(this,"enableValidation",(function(){r._setEventListeners()})),this._listSelector=t,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._listSelector.inputSelector)),this._buttonElement=this._formElement.querySelector(this._listSelector.submitButtonSelector)}var t,n;return t=e,(n=[{key:"setActiveButton",value:function(){this._buttonElement.removeAttribute("disabled"),this._buttonElement.classList.remove(this._listSelector.inactiveButtonClass)}},{key:"setDisabledButton",value:function(){this._buttonElement.classList.add(this._listSelector.inactiveButtonClass),this._buttonElement.setAttribute("disabled",!0)}},{key:"clearError",value:function(){var e=this;this._inputList.forEach((function(t){e._hideInputError(t)})),this.toggleButtonState()}}])&&T(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),D=new _(".popup_show-zoom");function z(e){var t=new c({data:e,handleCardClick:function(e,t){D.open(e,t)},handleLikeClick:function(){t.isLiked()?t.dislike():t.like()}},".cards-template");return t.generateCard()}D.setEventListeners(),new q({handleConfirmAction:function(e){console.log(e),deleteThisCard(e)}},".popup_delete-card").setEventListeners();var V=new o({items:[{name:"Проект 1",link:"https://onbog.com/wp-content/uploads/2020/11/onbog-22-11-20-001.jpg"},{name:"Проект 2",link:"https://avatars.dzeninfra.ru/get-zen_doc/3397162/pub_5edf9662b72a616ce0c6490c_5edf96635d6a463a3697959d/scale_1200"},{name:"Проект 3",link:"https://chudo-prirody.com/uploads/posts/2021-08/1628626913_148-p-foto-kotikov-milikh-158.jpg"},{name:"Проект 4",link:"http://klublady.ru/uploads/posts/2022-02/1644966169_8-klublady-ru-p-krasivie-kapkeiki-foto-8.jpg"},{name:"Проект 5",link:"https://vsegda-pomnim.com/uploads/posts/2022-04/1651030124_30-vsegda-pomnim-com-p-more-volni-foto-36.jpg"},{name:"Проект 6",link:"https://mykaleidoscope.ru/uploads/posts/2022-07/1657319920_9-mykaleidoscope-ru-p-kapkeiki-yagodnie-vkusnyashki-krasivo-foto-10.jpg"}],renderer:function(e){var t=z(e);console.log(e),V.addItemAppend(t)}},".cards");V.renderItems();var F=new O({popupSelector:".popup_new-place",callbackFormSubmit:function(e){var t=z(e);console.log(t),V.addItemPrepend(t),F.close()}},n);F.setEventListeners(),e.addEventListener("click",(function(){M.clearError(),F.open()}));var M=new x(n,t);M.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,